%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 772 591
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\Users\Kilian\OneDrive - tum.de\Studium\Physik\Praktika\Praktikum Teil 1\Git\PEN\Bilder\Feder2_gleich.eps)
%%CreationDate: Tue Apr 03 12:33:05 2018
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshowEmulation{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix} bind def
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/IsWord2010 { false } bind def
currentsystemparams /PrinterName known { /IsWord2010 { false currentsystemparams /PrinterName get (Access Softek) eq } bind def } if
IsWord2010 { /glyphshow { pop } bind def}{/glyphshow{glyphshowEmulation}wd }ifelse
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshowEmulation ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/xglsh{cpt 3 1 roll add exch 3 -1 roll glyphshow m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 44/s44 put
Encoding 45/s45 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 52/s52 put
Encoding 54/s54 put
Encoding 70/s70 put
Encoding 80/s80 put
Encoding 90/s90 put
Encoding 91/s91 put
Encoding 93/s93 put
Encoding 100/s100 put
Encoding 101/s101 put
Encoding 105/s105 put
Encoding 108/s108 put
Encoding 110/s110 put
Encoding 115/s115 put
Encoding 116/s116 put
/BoundingBoxes 21 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s44 [0 -434 569 1854] def
/s45 [0 -434 682 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s52 [0 -434 1139 1854] def
/s54 [0 -434 1139 1854] def
/s70 [0 -434 1251 1854] def
/s80 [0 -434 1366 1854] def
/s90 [0 -434 1251 1854] def
/s91 [0 -434 569 1854] def
/s93 [0 -434 569 1854] def
/s100 [0 -434 1139 1854] def
/s101 [0 -434 1139 1854] def
/s105 [0 -434 455 1854] def
/s108 [0 -434 455 1854] def
/s110 [0 -434 1139 1854] def
/s115 [0 -434 1024 1854] def
/s116 [0 -434 569 1854] def
end
/Metrics 21 dict def
 Metrics begin
/s32 569 def
/s44 569 def
/s45 682 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s52 1139 def
/s54 1139 def
/s70 1251 def
/s80 1366 def
/s90 1251 def
/s91 569 def
/s93 569 def
/s100 1139 def
/s101 1139 def
/s105 455 def
/s108 455 def
/s110 1139 def
/s115 1024 def
/s116 569 def
end
/CharProcs 21 dict def
CharProcs begin
/.notdef {} def
/s44 {
182 0 m
182 205 182 0 182 205 c
387 205 182 205 387 205 c
387 0 387 205 387 0 c
387 -75.33 373.67 -136.17 347 -182.5 c
320.33 -228.83 278 -264.67 220 -290 c
170 -213 220 -290 170 -213 c
208 -196.33 236 -171.83 254 -139.5 c
272 -107.17 282 -60.67 284 0 c
182 0 284 0 182 0 c
closepath } bind def
/s45 {
65 440 m
65 621 65 440 65 621 c
618 621 65 621 618 621 c
618 440 618 621 618 440 c
65 440 618 440 65 440 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s52 {
662 0 m
662 351 662 0 662 351 c
26 351 662 351 26 351 c
26 516 26 351 26 516 c
695 1466 26 516 695 1466 c
842 1466 695 1466 842 1466 c
842 516 842 1466 842 516 c
1040 516 842 516 1040 516 c
1040 351 1040 516 1040 351 c
842 351 1040 351 842 351 c
842 0 842 351 842 0 c
662 0 842 0 662 0 c
closepath 662 516 m
662 1177 662 516 662 1177 c
203 516 662 1177 203 516 c
662 516 203 516 662 516 c
closepath } bind def
/s54 {
1019 1107 m
840 1093 1019 1107 840 1093 c
824 1163.67 801.33 1215 772 1247 c
723.33 1298.33 663.33 1324 592 1324 c
534.67 1324 484.33 1308 441 1276 c
384.33 1234.67 339.67 1174.33 307 1095 c
274.33 1015.67 257.33 902.67 256 756 c
299.33 822 352.33 871 415 903 c
477.67 935 543.33 951 612 951 c
732 951 834.17 906.83 918.5 818.5 c
1002.83 730.17 1045 616 1045 476 c
1045 384 1025.17 298.5 985.5 219.5 c
945.83 140.5 891.33 80 822 38 c
752.67 -4 674 -25 586 -25 c
436 -25 313.67 30.17 219 140.5 c
124.33 250.83 77 432.67 77 686 c
77 969.33 129.33 1175.33 234 1304 c
325.33 1416 448.33 1472 603 1472 c
718.33 1472 812.83 1439.67 886.5 1375 c
960.17 1310.33 1004.33 1221 1019 1107 c
closepath 284 475 m
284 413 297.17 353.67 323.5 297 c
349.83 240.33 386.67 197.17 434 167.5 c
481.33 137.83 531 123 583 123 c
659 123 724.33 153.67 779 215 c
833.67 276.33 861 359.67 861 465 c
861 566.33 834 646.17 780 704.5 c
726 762.83 658 792 576 792 c
494.67 792 425.67 762.83 369 704.5 c
312.33 646.17 284 569.67 284 475 c
closepath } bind def
/s70 {
168 0 m
168 1466 168 0 168 1466 c
1157 1466 168 1466 1157 1466 c
1157 1293 1157 1466 1157 1293 c
362 1293 1157 1293 362 1293 c
362 839 362 1293 362 839 c
1050 839 362 839 1050 839 c
1050 666 1050 839 1050 666 c
362 666 1050 666 362 666 c
362 0 362 666 362 0 c
168 0 362 0 168 0 c
closepath } bind def
/s80 {
158 0 m
158 1466 158 0 158 1466 c
711 1466 158 1466 711 1466 c
808.33 1466 882.67 1461.33 934 1452 c
1006 1440 1066.33 1417.17 1115 1383.5 c
1163.67 1349.83 1202.83 1302.67 1232.5 1242 c
1262.17 1181.33 1277 1114.67 1277 1042 c
1277 917.33 1237.33 811.83 1158 725.5 c
1078.67 639.17 935.33 596 728 596 c
352 596 728 596 352 596 c
352 0 352 596 352 0 c
158 0 352 0 158 0 c
closepath 352 769 m
731 769 352 769 731 769 c
856.33 769 945.33 792.33 998 839 c
1050.67 885.67 1077 951.33 1077 1036 c
1077 1097.33 1061.5 1149.83 1030.5 1193.5 c
999.5 1237.17 958.67 1266 908 1280 c
875.33 1288.67 815 1293 727 1293 c
352 1293 727 1293 352 1293 c
352 769 352 1293 352 769 c
closepath } bind def
/s90 {
41 0 m
41 180 41 0 41 180 c
792 1119 41 180 792 1119 c
845.33 1185.67 896 1243.67 944 1293 c
126 1293 944 1293 126 1293 c
126 1466 126 1293 126 1466 c
1176 1466 126 1466 1176 1466 c
1176 1293 1176 1466 1176 1293 c
353 276 1176 1293 353 276 c
264 173 353 276 264 173 c
1200 173 264 173 1200 173 c
1200 0 1200 173 1200 0 c
41 0 1200 0 41 0 c
closepath } bind def
/s91 {
139 -407 m
139 1466 139 -407 139 1466 c
536 1466 139 1466 536 1466 c
536 1317 536 1466 536 1317 c
319 1317 536 1317 319 1317 c
319 -258 319 1317 319 -258 c
536 -258 319 -258 536 -258 c
536 -407 536 -258 536 -407 c
139 -407 536 -407 139 -407 c
closepath } bind def
/s93 {
436 -407 m
39 -407 436 -407 39 -407 c
39 -258 39 -407 39 -258 c
256 -258 39 -258 256 -258 c
256 1317 256 -258 256 1317 c
39 1317 256 1317 39 1317 c
39 1466 39 1317 39 1466 c
436 1466 39 1466 436 1466 c
436 -407 436 1466 436 -407 c
closepath } bind def
/s100 {
824 0 m
824 134 824 0 824 134 c
756.67 28.67 657.67 -24 527 -24 c
442.33 -24 364.5 -0.67 293.5 46 c
222.5 92.67 167.5 157.83 128.5 241.5 c
89.5 325.17 70 421.33 70 530 c
70 636 87.67 732.17 123 818.5 c
158.33 904.83 211.33 971 282 1017 c
352.67 1063 431.67 1086 519 1086 c
583 1086 640 1072.5 690 1045.5 c
740 1018.5 780.67 983.33 812 940 c
812 1466 812 940 812 1466 c
991 1466 812 1466 991 1466 c
991 0 991 1466 991 0 c
824 0 991 0 824 0 c
closepath 255 530 m
255 394 283.67 292.33 341 225 c
398.33 157.67 466 124 544 124 c
622.67 124 689.5 156.17 744.5 220.5 c
799.5 284.83 827 383 827 515 c
827 660.33 799 767 743 835 c
687 903 618 937 536 937 c
456 937 389.17 904.33 335.5 839 c
281.83 773.67 255 670.67 255 530 c
closepath } bind def
/s101 {
862 342 m
1048 319 862 342 1048 319 c
1018.67 210.33 964.33 126 885 66 c
805.67 6 704.33 -24 581 -24 c
425.67 -24 302.5 23.83 211.5 119.5 c
120.5 215.17 75 349.33 75 522 c
75 700.67 121 839.33 213 938 c
305 1036.67 424.33 1086 571 1086 c
713 1086 829 1037.67 919 941 c
1009 844.33 1054 708.33 1054 533 c
1054 522.33 1053.67 506.33 1053 485 c
261 485 1053 485 261 485 c
267.67 368.33 300.67 279 360 217 c
419.33 155 493.33 124 582 124 c
648 124 704.33 141.33 751 176 c
797.67 210.67 834.67 266 862 342 c
closepath 271 633 m
864 633 271 633 864 633 c
856 722.33 833.33 789.33 796 834 c
738.67 903.33 664.33 938 573 938 c
490.33 938 420.83 910.33 364.5 855 c
308.17 799.67 277 725.67 271 633 c
closepath } bind def
/s105 {
136 1259 m
136 1466 136 1259 136 1466 c
316 1466 136 1466 316 1466 c
316 1259 316 1466 316 1259 c
136 1259 316 1259 136 1259 c
closepath 136 0 m
136 1062 136 0 136 1062 c
316 1062 136 1062 316 1062 c
316 0 316 1062 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s108 {
131 0 m
131 1466 131 0 131 1466 c
311 1466 131 1466 311 1466 c
311 0 311 1466 311 0 c
131 0 311 0 131 0 c
closepath } bind def
/s110 {
135 0 m
135 1062 135 0 135 1062 c
297 1062 135 1062 297 1062 c
297 911 297 1062 297 911 c
375 1027.67 487.67 1086 635 1086 c
699 1086 757.83 1074.5 811.5 1051.5 c
865.17 1028.5 905.33 998.33 932 961 c
958.67 923.67 977.33 879.33 988 828 c
994.67 794.67 998 736.33 998 653 c
998 0 998 653 998 0 c
818 0 998 0 818 0 c
818 646 818 0 818 646 c
818 719.33 811 774.17 797 810.5 c
783 846.83 758.17 875.83 722.5 897.5 c
686.83 919.17 645 930 597 930 c
520.33 930 454.17 905.67 398.5 857 c
342.83 808.33 315 716 315 580 c
315 0 315 580 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s115 {
63 317 m
241 345 63 317 241 345 c
251 273.67 278.83 219 324.5 181 c
370.17 143 434 124 516 124 c
598.67 124 660 140.83 700 174.5 c
740 208.17 760 247.67 760 293 c
760 333.67 742.33 365.67 707 389 c
682.33 405 621 425.33 523 450 c
391 483.33 299.5 512.17 248.5 536.5 c
197.5 560.83 158.83 594.5 132.5 637.5 c
106.17 680.5 93 728 93 780 c
93 827.33 103.83 871.17 125.5 911.5 c
147.17 951.83 176.67 985.33 214 1012 c
242 1032.67 280.17 1050.17 328.5 1064.5 c
376.83 1078.83 428.67 1086 484 1086 c
567.33 1086 640.5 1074 703.5 1050 c
766.5 1026 813 993.5 843 952.5 c
873 911.5 893.67 856.67 905 788 c
729 764 905 788 729 764 c
721 818.67 697.83 861.33 659.5 892 c
621.17 922.67 567 938 497 938 c
414.33 938 355.33 924.33 320 897 c
284.67 869.67 267 837.67 267 801 c
267 777.67 274.33 756.67 289 738 c
303.67 718.67 326.67 702.67 358 690 c
376 683.33 429 668 517 644 c
644.33 610 733.17 582.17 783.5 560.5 c
833.83 538.83 873.33 507.33 902 466 c
930.67 424.67 945 373.33 945 312 c
945 252 927.5 195.5 892.5 142.5 c
857.5 89.5 807 48.5 741 19.5 c
675 -9.5 600.33 -24 517 -24 c
379 -24 273.83 4.67 201.5 62 c
129.17 119.33 83 204.33 63 317 c
closepath } bind def
/s116 {
528 161 m
554 2 528 161 554 2 c
503.33 -8.67 458 -14 418 -14 c
352.67 -14 302 -3.67 266 17 c
230 37.67 204.67 64.83 190 98.5 c
175.33 132.17 168 203 168 311 c
168 922 168 311 168 922 c
36 922 168 922 36 922 c
36 1062 36 922 36 1062 c
168 1062 36 1062 168 1062 c
168 1325 168 1062 168 1325 c
347 1433 168 1325 347 1433 c
347 1062 347 1433 347 1062 c
528 1062 347 1062 528 1062 c
528 922 528 1062 528 922 c
347 922 528 922 347 922 c
347 301 347 922 347 301 c
347 249.67 350.17 216.67 356.5 202 c
362.83 187.33 373.17 175.67 387.5 167 c
401.83 158.33 422.33 154 449 154 c
469 154 495.33 156.33 528 161 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 65/s65 put
Encoding 97/s97 put
Encoding 99/s99 put
Encoding 103/s103 put
Encoding 104/s104 put
Encoding 108/s108 put
Encoding 115/s115 put
Encoding 117/s117 put
/BoundingBoxes 10 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s65 [-3 -434 1366 1854] def
/s97 [0 -434 1139 1854] def
/s99 [0 -434 1024 1854] def
/s103 [0 -434 1139 1854] def
/s104 [0 -434 1139 1854] def
/s108 [0 -434 455 1854] def
/s115 [0 -434 1024 1854] def
/s117 [0 -434 1139 1854] def
end
/Metrics 10 dict def
 Metrics begin
/s32 569 def
/s65 1366 def
/s97 1139 def
/s99 1024 def
/s103 1139 def
/s104 1139 def
/s108 455 def
/s115 1024 def
/s117 1139 def
end
/CharProcs 10 dict def
CharProcs begin
/.notdef {} def
/s65 {
-3 0 m
560 1466 -3 0 560 1466 c
769 1466 560 1466 769 1466 c
1369 0 769 1466 1369 0 c
1148 0 1369 0 1148 0 c
977 444 1148 0 977 444 c
364 444 977 444 364 444 c
203 0 364 444 203 0 c
-3 0 203 0 -3 0 c
closepath 420 602 m
917 602 420 602 917 602 c
764 1008 917 602 764 1008 c
717.33 1131.33 682.67 1232.67 660 1312 c
641.33 1218 615 1124.67 581 1032 c
420 602 581 1032 420 602 c
closepath } bind def
/s97 {
828 131 m
761.33 74.33 697.17 34.33 635.5 11 c
573.83 -12.33 507.67 -24 437 -24 c
320.33 -24 230.67 4.5 168 61.5 c
105.33 118.5 74 191.33 74 280 c
74 332 85.83 379.5 109.5 422.5 c
133.17 465.5 164.17 500 202.5 526 c
240.83 552 284 571.67 332 585 c
367.33 594.33 420.67 603.33 492 612 c
637.33 629.33 744.33 650 813 674 c
813.67 698.67 814 714.33 814 721 c
814 794.33 797 846 763 876 c
717 916.67 648.67 937 558 937 c
473.33 937 410.83 922.17 370.5 892.5 c
330.17 862.83 300.33 810.33 281 735 c
105 759 281 735 105 759 c
121 834.33 147.33 895.17 184 941.5 c
220.67 987.83 273.67 1023.5 343 1048.5 c
412.33 1073.5 492.67 1086 584 1086 c
674.67 1086 748.33 1075.33 805 1054 c
861.67 1032.67 903.33 1005.83 930 973.5 c
956.67 941.17 975.33 900.33 986 851 c
992 820.33 995 765 995 685 c
995 445 995 685 995 445 c
995 277.67 998.83 171.83 1006.5 127.5 c
1014.17 83.17 1029.33 40.67 1052 0 c
864 0 1052 0 864 0 c
845.33 37.33 833.33 81 828 131 c
closepath 813 533 m
747.67 506.33 649.67 483.67 519 465 c
445 454.33 392.67 442.33 362 429 c
331.33 415.67 307.67 396.17 291 370.5 c
274.33 344.83 266 316.33 266 285 c
266 237 284.17 197 320.5 165 c
356.83 133 410 117 480 117 c
549.33 117 611 132.17 665 162.5 c
719 192.83 758.67 234.33 784 287 c
803.33 327.67 813 387.67 813 467 c
813 533 813 467 813 533 c
closepath } bind def
/s99 {
828 389 m
1005 366 828 389 1005 366 c
985.67 244 936.17 148.5 856.5 79.5 c
776.83 10.5 679 -24 563 -24 c
417.67 -24 300.83 23.5 212.5 118.5 c
124.17 213.5 80 349.67 80 527 c
80 641.67 99 742 137 828 c
175 914 232.83 978.5 310.5 1021.5 c
388.17 1064.5 472.67 1086 564 1086 c
679.33 1086 773.67 1056.83 847 998.5 c
920.33 940.17 967.33 857.33 988 750 c
813 723 988 750 813 723 c
796.33 794.33 766.83 848 724.5 884 c
682.17 920 631 938 571 938 c
480.33 938 406.67 905.5 350 840.5 c
293.33 775.5 265 672.67 265 532 c
265 389.33 292.33 285.67 347 221 c
401.67 156.33 473 124 561 124 c
631.67 124 690.67 145.67 738 189 c
785.33 232.33 815.33 299 828 389 c
closepath } bind def
/s103 {
102 -88 m
277 -114 102 -88 277 -114 c
284.33 -168 304.67 -207.33 338 -232 c
382.67 -265.33 443.67 -282 521 -282 c
604.33 -282 668.67 -265.33 714 -232 c
759.33 -198.67 790 -152 806 -92 c
815.33 -55.33 819.67 21.67 819 139 c
740.33 46.33 642.33 0 525 0 c
379 0 266 52.67 186 158 c
106 263.33 66 389.67 66 537 c
66 638.33 84.33 731.83 121 817.5 c
157.67 903.17 210.83 969.33 280.5 1016 c
350.17 1062.67 432 1086 526 1086 c
651.33 1086 754.67 1035.33 836 934 c
836 1062 836 934 836 1062 c
1002 1062 836 1062 1002 1062 c
1002 144 1002 1062 1002 144 c
1002 -21.33 985.17 -138.5 951.5 -207.5 c
917.83 -276.5 864.5 -331 791.5 -371 c
718.5 -411 628.67 -431 522 -431 c
395.33 -431 293 -402.5 215 -345.5 c
137 -288.5 99.33 -202.67 102 -88 c
closepath 251 550 m
251 410.67 278.67 309 334 245 c
389.33 181 458.67 149 542 149 c
624.67 149 694 180.83 750 244.5 c
806 308.17 834 408 834 544 c
834 674 805.17 772 747.5 838 c
689.83 904 620.33 937 539 937 c
459 937 391 904.5 335 839.5 c
279 774.5 251 678 251 550 c
closepath } bind def
/s104 {
135 0 m
135 1466 135 0 135 1466 c
315 1466 135 1466 315 1466 c
315 940 315 1466 315 940 c
399 1037.33 505 1086 633 1086 c
711.67 1086 780 1070.5 838 1039.5 c
896 1008.5 937.5 965.67 962.5 911 c
987.5 856.33 1000 777 1000 673 c
1000 0 1000 673 1000 0 c
820 0 1000 0 820 0 c
820 673 820 0 820 673 c
820 763 800.5 828.5 761.5 869.5 c
722.5 910.5 667.33 931 596 931 c
542.67 931 492.5 917.17 445.5 889.5 c
398.5 861.83 365 824.33 345 777 c
325 729.67 315 664.33 315 581 c
315 0 315 581 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s108 {
131 0 m
131 1466 131 0 131 1466 c
311 1466 131 1466 311 1466 c
311 0 311 1466 311 0 c
131 0 311 0 131 0 c
closepath } bind def
/s115 {
63 317 m
241 345 63 317 241 345 c
251 273.67 278.83 219 324.5 181 c
370.17 143 434 124 516 124 c
598.67 124 660 140.83 700 174.5 c
740 208.17 760 247.67 760 293 c
760 333.67 742.33 365.67 707 389 c
682.33 405 621 425.33 523 450 c
391 483.33 299.5 512.17 248.5 536.5 c
197.5 560.83 158.83 594.5 132.5 637.5 c
106.17 680.5 93 728 93 780 c
93 827.33 103.83 871.17 125.5 911.5 c
147.17 951.83 176.67 985.33 214 1012 c
242 1032.67 280.17 1050.17 328.5 1064.5 c
376.83 1078.83 428.67 1086 484 1086 c
567.33 1086 640.5 1074 703.5 1050 c
766.5 1026 813 993.5 843 952.5 c
873 911.5 893.67 856.67 905 788 c
729 764 905 788 729 764 c
721 818.67 697.83 861.33 659.5 892 c
621.17 922.67 567 938 497 938 c
414.33 938 355.33 924.33 320 897 c
284.67 869.67 267 837.67 267 801 c
267 777.67 274.33 756.67 289 738 c
303.67 718.67 326.67 702.67 358 690 c
376 683.33 429 668 517 644 c
644.33 610 733.17 582.17 783.5 560.5 c
833.83 538.83 873.33 507.33 902 466 c
930.67 424.67 945 373.33 945 312 c
945 252 927.5 195.5 892.5 142.5 c
857.5 89.5 807 48.5 741 19.5 c
675 -9.5 600.33 -24 517 -24 c
379 -24 273.83 4.67 201.5 62 c
129.17 119.33 83 204.33 63 317 c
closepath } bind def
/s117 {
831 0 m
831 156 831 0 831 156 c
748.33 36 636 -24 494 -24 c
431.33 -24 372.83 -12 318.5 12 c
264.17 36 223.83 66.17 197.5 102.5 c
171.17 138.83 152.67 183.33 142 236 c
134.67 271.33 131 327.33 131 404 c
131 1062 131 404 131 1062 c
311 1062 131 1062 311 1062 c
311 473 311 1062 311 473 c
311 379 314.67 315.67 322 283 c
333.33 235.67 357.33 198.5 394 171.5 c
430.67 144.5 476 131 530 131 c
584 131 634.67 144.83 682 172.5 c
729.33 200.17 762.83 237.83 782.5 285.5 c
802.17 333.17 812 402.33 812 493 c
812 1062 812 493 812 1062 c
992 1062 812 1062 992 1062 c
992 0 992 1062 992 0 c
831 0 992 0 831 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Arial exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 771.85 590.88 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.306719 0.304805 sc

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [0.78248 -0 0 -0.787402 0 1938.56] concat
gs
576 2053 m
2769 2053 l
7 sw
1 sj
2 scap
st
1015 2053 m
1015 2070 l
0 scap
st
1892 2053 m
1892 2070 l
st
2769 2053 m
2769 2070 l
st
576 2053 m
576 2087 l
st
1453 2053 m
1453 2087 l
st
2330 2053 m
2330 2087 l
st
576 2053 m
576 286 l
2 scap
st
576 1837 m
559 1837 l
0 scap
st
576 1516 m
559 1516 l
st
576 1195 m
559 1195 l
st
576 874 m
559 874 l
st
576 552 m
559 552 l
st
576 1998 m
542 1998 l
st
576 1677 m
542 1677 l
st
576 1355 m
542 1355 l
st
576 1034 m
542 1034 l
st
576 713 m
542 713 l
st
576 392 m
542 392 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 555 -2170 m
(0)[41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1411 -2170 m
(10)[41 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2288 -2170 m
(20)[41 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 388 -2021 m
(-0,4)[24 41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 388 -1700 m
(-0,2)[24 41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 413 -1378 m
(0,0)[41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 413 -1057 m
(0,2)[41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 413 -736 m
(0,4)[41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 413 -415 m
(0,6)[41 20 41 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 576 286 2194 1768 np rectpath
/eocl cland
np exec
576 1474 m
580 1373 l
585 1268 l
589 1154 l
594 1047 l
598 934 l
602 829 l
607 727 l
611 645 l
615 563 l
620 504 l
624 462 l
629 437 l
633 428 l
637 440 l
642 466 l
646 511 l
651 577 l
655 655 l
659 742 l
664 841 l
668 945 l
672 1052 l
677 1167 l
681 1280 l
686 1386 l
690 1484 l
694 1569 l
699 1645 l
703 1706 l
708 1753 l
712 1781 l
716 1792 l
721 1784 l
725 1764 l
730 1715 l
734 1661 l
738 1590 l
743 1504 l
747 1402 l
751 1298 l
756 1189 l
760 1081 l
765 971 l
769 865 l
773 759 l
778 671 l
782 597 l
787 533 l
791 480 l
795 453 l
800 436 l
804 441 l
808 463 l
813 505 l
817 561 l
822 635 l
826 717 l
830 812 l
835 913 l
839 1022 l
844 1134 l
848 1245 l
852 1349 l
857 1450 l
861 1536 l
865 1620 l
870 1686 l
874 1739 l
879 1769 l
883 1789 l
887 1784 l
892 1766 l
896 1727 l
901 1675 l
905 1607 l
909 1532 l
914 1437 l
918 1334 l
922 1227 l
927 1121 l
931 1011 l
936 906 l
940 800 l
944 710 l
949 625 l
953 559 l
958 506 l
962 470 l
966 447 l
971 445 l
975 464 l
980 498 l
984 543 l
988 608 l
993 688 l
997 780 l
1001 878 l
1006 986 l
1010 1094 l
1015 1202 l
1019 1305 l
1023 1410 l
1028 1499 l
1032 1586 l
1037 1655 l
1041 1713 l
1045 1749 l
1050 1774 l
1054 1781 l
1058 1771 l
1063 1737 l
1067 1693 l
1072 1629 l
1076 1555 l
1080 1465 l
1085 1367 l
1089 1263 l
1094 1156 l
1098 1049 l
1102 942 l
1107 837 l
1111 747 l
1115 661 l
1120 588 l
1124 523 l
1129 482 l
1133 457 l
1137 448 l
1142 456 l
1146 483 l
1151 525 l
1155 588 l
1159 656 l
1164 744 l
1168 838 l
1172 942 l
1177 1049 l
1181 1160 l
1186 1265 l
1190 1374 l
1194 1465 l
1199 1558 l
1203 1633 l
1208 1690 l
1212 1737 l
1216 1768 l
1221 1777 l
1225 1777 l
1230 1753 l
1234 1711 l
1238 1655 l
1243 1587 l
1247 1502 l
1251 1405 l
1256 1301 l
1260 1200 l
1265 1091 l
1269 988 l
1273 886 l
1278 784 l
1282 694 l
1287 615 l
1291 545 l
1295 498 l
1300 463 l
1304 452 l
1308 455 l
1313 477 l
1317 508 l
1322 564 l
1326 631 l
1330 715 l
1335 805 l
1339 915 l
1344 1016 l
1348 1125 l
1352 1229 l
1357 1336 l
1361 1436 l
1365 1526 l
1370 1604 l
1374 1673 l
1379 1720 l
1383 1755 l
1387 1772 l
1392 1776 l
1396 1759 l
1401 1723 l
1405 1669 l
1409 1608 l
1414 1531 l
1418 1441 l
1422 1343 l
1427 1243 l
1431 1131 l
1436 1025 l
1440 917 l
1444 815 l
1449 718 l
1453 640 l
1458 570 l
1462 518 l
1466 479 l
1471 460 l
1475 454 l
1480 473 l
1484 502 l
1488 550 l
1493 612 l
1497 686 l
1501 777 l
1506 874 l
1510 972 l
1515 1082 l
1519 1190 l
1523 1297 l
1528 1393 l
1532 1487 l
1537 1573 l
1541 1647 l
1545 1704 l
1550 1749 l
1554 1770 l
1558 1776 l
1563 1759 l
1567 1735 l
1572 1690 l
1576 1634 l
1580 1561 l
1585 1476 l
1589 1380 l
1594 1275 l
1598 1172 l
1602 1064 l
1607 952 l
1611 856 l
1615 759 l
1620 671 l
1624 594 l
1629 533 l
1633 490 l
1637 470 l
1642 454 l
1646 461 l
1651 491 l
1655 530 l
1659 584 l
1664 653 l
1668 737 l
1673 833 l
1677 933 l
1681 1042 l
1686 1150 l
1690 1259 l
1694 1358 l
1699 1456 l
1703 1540 l
1708 1619 l
1712 1682 l
1716 1726 l
1721 1759 l
1725 1775 l
1730 1767 l
1734 1748 l
1738 1708 l
1743 1659 l
1747 1589 l
1751 1508 l
1756 1417 l
1760 1317 l
1765 1217 l
1769 1112 l
1773 998 l
1778 891 l
1782 791 l
1787 704 l
1791 621 l
1795 556 l
1800 502 l
1804 474 l
1808 455 l
1813 458 l
1817 476 l
1822 512 l
1826 560 l
1830 625 l
1835 701 l
1839 797 l
1844 894 l
1848 1002 l
1852 1106 l
1857 1217 l
1861 1319 l
1865 1423 l
1870 1510 l
1874 1590 l
1879 1657 l
1883 1714 l
1887 1754 l
1892 1776 l
1896 1779 l
1901 1761 l
1905 1727 l
1909 1678 l
1914 1620 l
1918 1545 l
1923 1453 l
1927 1358 l
1931 1246 l
1936 1140 l
1940 1030 l
1944 931 l
1949 826 l
1953 739 l
1958 652 l
1962 580 l
1966 519 l
1971 482 l
1975 457 l
1980 459 l
1984 465 l
1988 496 l
1993 538 l
1997 602 l
2001 676 l
2006 760 l
2010 857 l
2015 968 l
2019 1072 l
2023 1182 l
2028 1284 l
2032 1386 l
2037 1482 l
2041 1566 l
2045 1637 l
2050 1698 l
2054 1739 l
2058 1775 l
2063 1779 l
2067 1772 l
2072 1742 l
2076 1701 l
2080 1637 l
2085 1569 l
2089 1486 l
2094 1396 l
2098 1290 l
2102 1182 l
2107 1074 l
2111 966 l
2115 862 l
2120 763 l
2124 674 l
2129 602 l
2133 540 l
2137 496 l
2142 459 l
2146 448 l
2151 457 l
2155 484 l
2159 519 l
2164 577 l
2168 644 l
2173 729 l
2177 822 l
2181 924 l
2186 1028 l
2190 1141 l
2194 1247 l
2199 1351 l
2203 1448 l
2208 1536 l
2212 1615 l
2216 1682 l
2221 1730 l
2225 1766 l
2230 1781 l
2234 1779 l
2238 1754 l
2243 1724 l
2247 1670 l
2251 1598 l
2256 1519 l
2260 1431 l
2265 1331 l
2269 1222 l
2273 1114 l
2278 1010 l
2282 894 l
2287 798 l
2291 702 l
2295 624 l
2300 558 l
2304 505 l
2308 469 l
2313 453 l
2317 446 l
2322 464 l
2326 496 l
2330 547 l
2335 613 l
2339 693 l
2344 788 l
2348 888 l
2352 991 l
2357 1099 l
2361 1204 l
2365 1316 l
2370 1413 l
2374 1513 l
2379 1591 l
2383 1664 l
2387 1713 l
2392 1754 l
2396 1773 l
2401 1784 l
2405 1772 l
2409 1743 l
2414 1694 l
2418 1634 l
2423 1550 l
2427 1461 l
2431 1363 l
2436 1258 l
2440 1145 l
2444 1041 l
2449 931 l
2453 830 l
2458 734 l
2462 651 l
2466 572 l
2471 516 l
2475 472 l
2480 453 l
2484 444 l
2488 456 l
2493 482 l
2497 530 l
2501 589 l
2506 666 l
2510 749 l
2515 846 l
2519 949 l
2523 1059 l
2528 1168 l
2532 1282 l
2537 1385 l
2541 1486 l
2545 1571 l
2550 1642 l
2554 1699 l
2558 1751 l
2563 1774 l
2567 1791 l
2572 1780 l
2576 1756 l
2580 1711 l
2585 1654 l
2589 1575 l
2594 1495 l
2598 1398 l
2602 1294 l
2607 1182 l
2611 1074 l
2615 964 l
2620 864 l
2624 764 l
2629 678 l
2633 600 l
2637 536 l
2642 483 l
2646 452 l
2651 439 l
2655 445 l
2659 468 l
2664 509 l
2668 560 l
2673 636 l
2677 719 l
2681 819 l
2686 914 l
2690 1030 l
2694 1134 l
2699 1245 l
2703 1347 l
2708 1450 l
2712 1540 l
2716 1625 l
2721 1687 l
2725 1742 l
2730 1769 l
2734 1787 l
2738 1783 l
2743 1762 l
2747 1723 l
2751 1674 l
2756 1600 l
2760 1521 l
2765 1427 l
2769 1327 l
0 0.502 0 rgb
1 scap
st
gr
gs
pathproc 576 286 2194 1768 np rectpath
/eocl cland
np exec
576 1476 m
582 1342 l
588 1196 l
594 1046 l
600 899 l
606 763 l
612 645 l
618 551 l
624 486 l
631 453 l
633 449 l
637 454 l
643 488 l
649 555 l
655 650 l
661 768 l
667 905 l
673 1052 l
679 1202 l
685 1348 l
691 1481 l
697 1597 l
703 1687 l
709 1748 l
715 1777 l
716 1778 l
721 1774 l
721 1772 l
727 1733 l
734 1663 l
740 1565 l
746 1444 l
752 1305 l
758 1158 l
764 1008 l
770 863 l
776 731 l
782 619 l
788 532 l
794 475 l
800 451 l
800 450 l
804 452 l
806 460 l
812 502 l
818 576 l
824 678 l
830 802 l
837 941 l
843 1090 l
849 1240 l
855 1383 l
861 1513 l
867 1622 l
873 1706 l
879 1759 l
883 1776 l
885 1779 l
887 1778 l
891 1765 l
897 1718 l
903 1640 l
909 1536 l
915 1410 l
921 1268 l
927 1119 l
934 970 l
940 828 l
946 700 l
952 594 l
958 514 l
964 465 l
970 449 l
971 450 l
976 467 l
982 518 l
988 600 l
994 708 l
1000 836 l
1006 979 l
1012 1128 l
1018 1277 l
1024 1418 l
1030 1543 l
1037 1646 l
1043 1722 l
1049 1767 l
1054 1779 l
1055 1779 l
1061 1756 l
1067 1701 l
1073 1616 l
1079 1505 l
1085 1375 l
1091 1231 l
1097 1081 l
1103 933 l
1109 794 l
1115 671 l
1121 571 l
1127 499 l
1133 458 l
1137 449 l
1140 451 l
1146 477 l
1152 537 l
1158 625 l
1164 739 l
1170 872 l
1176 1017 l
1182 1167 l
1188 1314 l
1194 1452 l
1200 1572 l
1206 1668 l
1212 1737 l
1218 1773 l
1221 1779 l
1224 1776 l
1225 1774 l
1230 1745 l
1236 1682 l
1243 1590 l
1249 1474 l
1255 1339 l
1261 1193 l
1267 1042 l
1273 896 l
1279 760 l
1285 643 l
1291 550 l
1297 485 l
1303 453 l
1304 451 l
1308 452 l
1309 454 l
1315 489 l
1321 556 l
1327 652 l
1333 771 l
1339 908 l
1346 1055 l
1352 1205 l
1358 1351 l
1364 1484 l
1370 1599 l
1376 1689 l
1382 1749 l
1387 1776 l
1388 1777 l
1392 1778 l
1394 1771 l
1400 1732 l
1406 1661 l
1412 1562 l
1418 1441 l
1424 1302 l
1430 1154 l
1436 1004 l
1442 860 l
1449 729 l
1455 617 l
1461 530 l
1467 474 l
1471 454 l
1473 450 l
1475 450 l
1479 460 l
1485 504 l
1491 578 l
1497 680 l
1503 805 l
1509 945 l
1515 1093 l
1521 1243 l
1527 1386 l
1533 1515 l
1539 1624 l
1546 1707 l
1552 1759 l
1558 1779 l
1564 1765 l
1570 1717 l
1576 1639 l
1582 1533 l
1588 1407 l
1594 1265 l
1600 1116 l
1606 967 l
1612 825 l
1618 698 l
1624 592 l
1630 513 l
1636 465 l
1642 449 l
1649 468 l
1655 520 l
1661 602 l
1667 710 l
1673 839 l
1679 982 l
1685 1132 l
1691 1280 l
1697 1421 l
1703 1545 l
1709 1648 l
1715 1723 l
1721 1768 l
1725 1779 l
1727 1779 l
1730 1774 l
1733 1756 l
1739 1700 l
1745 1614 l
1752 1503 l
1758 1372 l
1764 1228 l
1770 1078 l
1776 930 l
1782 791 l
1788 669 l
1794 569 l
1800 498 l
1806 458 l
1808 451 l
1812 451 l
1813 453 l
1818 478 l
1824 538 l
1830 627 l
1836 741 l
1842 874 l
1848 1020 l
1855 1170 l
1861 1317 l
1867 1454 l
1873 1574 l
1879 1670 l
1885 1738 l
1891 1774 l
1892 1776 l
1896 1777 l
1897 1776 l
1903 1744 l
1909 1681 l
1915 1588 l
1921 1471 l
1927 1336 l
1933 1190 l
1939 1039 l
1945 893 l
1951 758 l
1958 641 l
1964 548 l
1970 484 l
1975 454 l
1976 453 l
1980 450 l
1982 455 l
1988 491 l
1994 558 l
2000 654 l
2006 774 l
2012 911 l
2018 1058 l
2024 1208 l
2030 1354 l
2036 1487 l
2042 1601 l
2048 1690 l
2054 1750 l
2061 1777 l
2063 1779 l
2067 1771 l
2073 1731 l
2079 1659 l
2085 1560 l
2091 1438 l
2097 1299 l
2103 1151 l
2109 1001 l
2115 857 l
2121 726 l
2127 615 l
2133 529 l
2139 473 l
2145 450 l
2146 449 l
2151 461 l
2158 505 l
2164 580 l
2170 683 l
2176 807 l
2182 948 l
2188 1096 l
2194 1246 l
2200 1389 l
2206 1518 l
2212 1626 l
2218 1708 l
2224 1760 l
2230 1779 l
2236 1764 l
2242 1716 l
2248 1637 l
2254 1531 l
2261 1404 l
2267 1262 l
2273 1113 l
2279 964 l
2285 822 l
2291 695 l
2297 590 l
2303 512 l
2309 464 l
2313 451 l
2315 449 l
2317 453 l
2321 469 l
2327 521 l
2333 604 l
2339 713 l
2345 842 l
2351 985 l
2357 1135 l
2364 1283 l
2370 1424 l
2376 1548 l
2382 1650 l
2388 1725 l
2394 1768 l
2396 1776 l
2400 1778 l
2401 1777 l
2406 1755 l
2412 1698 l
2418 1612 l
2424 1500 l
2430 1369 l
2436 1225 l
2442 1074 l
2448 926 l
2454 788 l
2460 666 l
2467 567 l
2473 496 l
2479 457 l
2480 454 l
2484 450 l
2485 451 l
2491 479 l
2497 540 l
2503 629 l
2509 744 l
2515 877 l
2521 1023 l
2527 1173 l
2533 1320 l
2539 1457 l
2545 1576 l
2551 1672 l
2557 1739 l
2563 1774 l
2567 1779 l
2570 1776 l
2576 1743 l
2582 1679 l
2588 1586 l
2594 1468 l
2600 1333 l
2606 1186 l
2612 1036 l
2618 890 l
2624 755 l
2630 639 l
2636 546 l
2642 483 l
2648 452 l
2651 449 l
2654 455 l
2660 492 l
2666 560 l
2673 657 l
2679 777 l
2685 914 l
2691 1061 l
2697 1211 l
2703 1357 l
2709 1489 l
2715 1603 l
2721 1692 l
2727 1751 l
2733 1778 l
2734 1779 l
2739 1770 l
2745 1730 l
2751 1658 l
2757 1558 l
2763 1435 l
2770 1296 l
1 0 0 rgb
1 scap
st
gr
gs
pathproc 576 286 2194 1768 np rectpath
/eocl cland
np exec
gr
gs
gs
1 -1 sc
286 -1337 tr
90 ro
/MC2_Arial 91 self 0 0 m
(Ausschlag)[60 50 45 45 45 50 19 50 50 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC1_Arial 91 self 1536 -2308 m
(Zeit [s])[55 50 19 24 24 24 45 24 ] xs
1 -1 sc
gr
2386 88 m
3125 88 l
3125 325 l
2386 325 l
cp
gs
1 1 1 rgb
eofi
gr
3 sw
0 sj
2 scap
st
gs
gs
gr
gs
gs
2399 151 m
2601 151 l
7 sw
0 0.502 0 rgb
1 sj
1 scap
st
gr
gr
1 -1 sc
/MC1_Arial 91 self 2601 -182 m
( Pendel 1)[24 60 50 50 50 50 19 24 50 ] xs
1 -1 sc
gs
gr
gs
gs
2399 262 m
2601 262 l
7 sw
1 0 0 rgb
1 sj
1 scap
st
gr
gr
1 -1 sc
2601 -293 m
( Fit Pendel 1)[24 55 19 24 24 60 50 50 50 50 19 24 50 ] xs
1 -1 sc
gr
gr
gs
gr
Save0 restore end
showpage
%%EOF
