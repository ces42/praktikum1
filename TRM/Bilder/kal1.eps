%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 772 591
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\Users\Kilian\OneDrive - tum.de\Studium\Physik\Praktika\Praktikum Teil 1\Git\TRM\Bilder\kal1.eps)
%%CreationDate: Tue Mar 27 21:02:12 2018
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshowEmulation{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix} bind def
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/IsWord2010 { false } bind def
currentsystemparams /PrinterName known { /IsWord2010 { false currentsystemparams /PrinterName get (Access Softek) eq } bind def } if
IsWord2010 { /glyphshow { pop } bind def}{/glyphshow{glyphshowEmulation}wd }ifelse
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshowEmulation ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/xglsh{cpt 3 1 roll add exch 3 -1 roll glyphshow m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 45/s45 put
Encoding 46/s46 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 52/s52 put
Encoding 53/s53 put
Encoding 70/s70 put
Encoding 75/s75 put
Encoding 76/s76 put
Encoding 87/s87 put
Encoding 91/s91 put
Encoding 93/s93 put
Encoding 97/s97 put
Encoding 100/s100 put
Encoding 101/s101 put
Encoding 102/s102 put
Encoding 103/s103 put
Encoding 105/s105 put
Encoding 107/s107 put
Encoding 108/s108 put
Encoding 110/s110 put
Encoding 114/s114 put
Encoding 116/s116 put
/BoundingBoxes 26 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s45 [0 -434 682 1854] def
/s46 [0 -434 569 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s52 [0 -434 1139 1854] def
/s53 [0 -434 1139 1854] def
/s70 [0 -434 1251 1854] def
/s75 [0 -434 1366 1854] def
/s76 [0 -434 1139 1854] def
/s87 [0 -434 1933 1854] def
/s91 [0 -434 569 1854] def
/s93 [0 -434 569 1854] def
/s97 [0 -434 1139 1854] def
/s100 [0 -434 1139 1854] def
/s101 [0 -434 1139 1854] def
/s102 [0 -434 569 1854] def
/s103 [0 -434 1139 1854] def
/s105 [0 -434 455 1854] def
/s107 [0 -434 1024 1854] def
/s108 [0 -434 455 1854] def
/s110 [0 -434 1139 1854] def
/s114 [0 -434 682 1854] def
/s116 [0 -434 569 1854] def
end
/Metrics 26 dict def
 Metrics begin
/s32 569 def
/s45 682 def
/s46 569 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s52 1139 def
/s53 1139 def
/s70 1251 def
/s75 1366 def
/s76 1139 def
/s87 1933 def
/s91 569 def
/s93 569 def
/s97 1139 def
/s100 1139 def
/s101 1139 def
/s102 569 def
/s103 1139 def
/s105 455 def
/s107 1024 def
/s108 455 def
/s110 1139 def
/s114 682 def
/s116 569 def
end
/CharProcs 26 dict def
CharProcs begin
/.notdef {} def
/s45 {
65 440 m
65 621 65 440 65 621 c
618 621 65 621 618 621 c
618 440 618 621 618 440 c
65 440 618 440 65 440 c
closepath } bind def
/s46 {
186 0 m
186 205 186 0 186 205 c
391 205 186 205 391 205 c
391 0 391 205 391 0 c
186 0 391 0 186 0 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s52 {
662 0 m
662 351 662 0 662 351 c
26 351 662 351 26 351 c
26 516 26 351 26 516 c
695 1466 26 516 695 1466 c
842 1466 695 1466 842 1466 c
842 516 842 1466 842 516 c
1040 516 842 516 1040 516 c
1040 351 1040 516 1040 351 c
842 351 1040 351 842 351 c
842 0 842 351 842 0 c
662 0 842 0 662 0 c
closepath 662 516 m
662 1177 662 516 662 1177 c
203 516 662 1177 203 516 c
662 516 203 516 662 516 c
closepath } bind def
/s53 {
85 384 m
274 400 85 384 274 400 c
288 308 320.5 238.83 371.5 192.5 c
422.5 146.17 484 123 556 123 c
642.67 123 716 155.67 776 221 c
836 286.33 866 373 866 481 c
866 583.67 837.17 664.67 779.5 724 c
721.83 783.33 646.33 813 553 813 c
495 813 442.67 799.83 396 773.5 c
349.33 747.17 312.67 713 286 671 c
117 693 286 671 117 693 c
259 1446 117 693 259 1446 c
988 1446 259 1446 988 1446 c
988 1274 988 1446 988 1274 c
403 1274 988 1274 403 1274 c
324 880 403 1274 324 880 c
412 941.33 504.33 972 601 972 c
729 972 837 927.67 925 839 c
1013 750.33 1057 636.33 1057 497 c
1057 364.33 1018.33 249.67 941 153 c
847 34.33 718.67 -25 556 -25 c
422.67 -25 313.83 12.33 229.5 87 c
145.17 161.67 97 260.67 85 384 c
closepath } bind def
/s70 {
168 0 m
168 1466 168 0 168 1466 c
1157 1466 168 1466 1157 1466 c
1157 1293 1157 1466 1157 1293 c
362 1293 1157 1293 362 1293 c
362 839 362 1293 362 839 c
1050 839 362 839 1050 839 c
1050 666 1050 839 1050 666 c
362 666 1050 666 362 666 c
362 0 362 666 362 0 c
168 0 362 0 168 0 c
closepath } bind def
/s75 {
150 0 m
150 1466 150 0 150 1466 c
344 1466 150 1466 344 1466 c
344 739 344 1466 344 739 c
1072 1466 344 739 1072 1466 c
1335 1466 1072 1466 1335 1466 c
720 872 1335 1466 720 872 c
1362 0 720 872 1362 0 c
1106 0 1362 0 1106 0 c
584 742 1106 0 584 742 c
344 508 584 742 344 508 c
344 0 344 508 344 0 c
150 0 344 0 150 0 c
closepath } bind def
/s76 {
150 0 m
150 1466 150 0 150 1466 c
344 1466 150 1466 344 1466 c
344 173 344 1466 344 173 c
1066 173 344 173 1066 173 c
1066 0 1066 173 1066 0 c
150 0 1066 0 150 0 c
closepath } bind def
/s87 {
414 0 m
25 1466 414 0 25 1466 c
224 1466 25 1466 224 1466 c
447 505 224 1466 447 505 c
471 404.33 491.67 304.33 509 205 c
546.33 361.67 568.33 452 575 476 c
854 1466 575 476 854 1466 c
1088 1466 854 1466 1088 1466 c
1298 724 1088 1466 1298 724 c
1350.67 540 1388.67 367 1412 205 c
1430.67 297.67 1455 404 1485 524 c
1715 1466 1485 524 1715 1466 c
1910 1466 1715 1466 1910 1466 c
1508 0 1910 1466 1508 0 c
1321 0 1508 0 1321 0 c
1012 1117 1321 0 1012 1117 c
986 1210.33 970.67 1267.67 966 1289 c
950.67 1221.67 936.33 1164.33 923 1117 c
612 0 923 1117 612 0 c
414 0 612 0 414 0 c
closepath } bind def
/s91 {
139 -407 m
139 1466 139 -407 139 1466 c
536 1466 139 1466 536 1466 c
536 1317 536 1466 536 1317 c
319 1317 536 1317 319 1317 c
319 -258 319 1317 319 -258 c
536 -258 319 -258 536 -258 c
536 -407 536 -258 536 -407 c
139 -407 536 -407 139 -407 c
closepath } bind def
/s93 {
436 -407 m
39 -407 436 -407 39 -407 c
39 -258 39 -407 39 -258 c
256 -258 39 -258 256 -258 c
256 1317 256 -258 256 1317 c
39 1317 256 1317 39 1317 c
39 1466 39 1317 39 1466 c
436 1466 39 1466 436 1466 c
436 -407 436 1466 436 -407 c
closepath } bind def
/s97 {
828 131 m
761.33 74.33 697.17 34.33 635.5 11 c
573.83 -12.33 507.67 -24 437 -24 c
320.33 -24 230.67 4.5 168 61.5 c
105.33 118.5 74 191.33 74 280 c
74 332 85.83 379.5 109.5 422.5 c
133.17 465.5 164.17 500 202.5 526 c
240.83 552 284 571.67 332 585 c
367.33 594.33 420.67 603.33 492 612 c
637.33 629.33 744.33 650 813 674 c
813.67 698.67 814 714.33 814 721 c
814 794.33 797 846 763 876 c
717 916.67 648.67 937 558 937 c
473.33 937 410.83 922.17 370.5 892.5 c
330.17 862.83 300.33 810.33 281 735 c
105 759 281 735 105 759 c
121 834.33 147.33 895.17 184 941.5 c
220.67 987.83 273.67 1023.5 343 1048.5 c
412.33 1073.5 492.67 1086 584 1086 c
674.67 1086 748.33 1075.33 805 1054 c
861.67 1032.67 903.33 1005.83 930 973.5 c
956.67 941.17 975.33 900.33 986 851 c
992 820.33 995 765 995 685 c
995 445 995 685 995 445 c
995 277.67 998.83 171.83 1006.5 127.5 c
1014.17 83.17 1029.33 40.67 1052 0 c
864 0 1052 0 864 0 c
845.33 37.33 833.33 81 828 131 c
closepath 813 533 m
747.67 506.33 649.67 483.67 519 465 c
445 454.33 392.67 442.33 362 429 c
331.33 415.67 307.67 396.17 291 370.5 c
274.33 344.83 266 316.33 266 285 c
266 237 284.17 197 320.5 165 c
356.83 133 410 117 480 117 c
549.33 117 611 132.17 665 162.5 c
719 192.83 758.67 234.33 784 287 c
803.33 327.67 813 387.67 813 467 c
813 533 813 467 813 533 c
closepath } bind def
/s100 {
824 0 m
824 134 824 0 824 134 c
756.67 28.67 657.67 -24 527 -24 c
442.33 -24 364.5 -0.67 293.5 46 c
222.5 92.67 167.5 157.83 128.5 241.5 c
89.5 325.17 70 421.33 70 530 c
70 636 87.67 732.17 123 818.5 c
158.33 904.83 211.33 971 282 1017 c
352.67 1063 431.67 1086 519 1086 c
583 1086 640 1072.5 690 1045.5 c
740 1018.5 780.67 983.33 812 940 c
812 1466 812 940 812 1466 c
991 1466 812 1466 991 1466 c
991 0 991 1466 991 0 c
824 0 991 0 824 0 c
closepath 255 530 m
255 394 283.67 292.33 341 225 c
398.33 157.67 466 124 544 124 c
622.67 124 689.5 156.17 744.5 220.5 c
799.5 284.83 827 383 827 515 c
827 660.33 799 767 743 835 c
687 903 618 937 536 937 c
456 937 389.17 904.33 335.5 839 c
281.83 773.67 255 670.67 255 530 c
closepath } bind def
/s101 {
862 342 m
1048 319 862 342 1048 319 c
1018.67 210.33 964.33 126 885 66 c
805.67 6 704.33 -24 581 -24 c
425.67 -24 302.5 23.83 211.5 119.5 c
120.5 215.17 75 349.33 75 522 c
75 700.67 121 839.33 213 938 c
305 1036.67 424.33 1086 571 1086 c
713 1086 829 1037.67 919 941 c
1009 844.33 1054 708.33 1054 533 c
1054 522.33 1053.67 506.33 1053 485 c
261 485 1053 485 261 485 c
267.67 368.33 300.67 279 360 217 c
419.33 155 493.33 124 582 124 c
648 124 704.33 141.33 751 176 c
797.67 210.67 834.67 266 862 342 c
closepath 271 633 m
864 633 271 633 864 633 c
856 722.33 833.33 789.33 796 834 c
738.67 903.33 664.33 938 573 938 c
490.33 938 420.83 910.33 364.5 855 c
308.17 799.67 277 725.67 271 633 c
closepath } bind def
/s102 {
178 0 m
178 922 178 0 178 922 c
19 922 178 922 19 922 c
19 1062 19 922 19 1062 c
178 1062 19 1062 178 1062 c
178 1175 178 1062 178 1175 c
178 1246.33 184.33 1299.33 197 1334 c
214.33 1380.67 244.83 1418.5 288.5 1447.5 c
332.17 1476.5 393.33 1491 472 1491 c
522.67 1491 578.67 1485 640 1473 c
613 1316 640 1473 613 1316 c
575.67 1322.67 540.33 1326 507 1326 c
452.33 1326 413.67 1314.33 391 1291 c
368.33 1267.67 357 1224 357 1160 c
357 1062 357 1160 357 1062 c
564 1062 357 1062 564 1062 c
564 922 564 1062 564 922 c
357 922 564 922 357 922 c
357 0 357 922 357 0 c
178 0 357 0 178 0 c
closepath } bind def
/s103 {
102 -88 m
277 -114 102 -88 277 -114 c
284.33 -168 304.67 -207.33 338 -232 c
382.67 -265.33 443.67 -282 521 -282 c
604.33 -282 668.67 -265.33 714 -232 c
759.33 -198.67 790 -152 806 -92 c
815.33 -55.33 819.67 21.67 819 139 c
740.33 46.33 642.33 0 525 0 c
379 0 266 52.67 186 158 c
106 263.33 66 389.67 66 537 c
66 638.33 84.33 731.83 121 817.5 c
157.67 903.17 210.83 969.33 280.5 1016 c
350.17 1062.67 432 1086 526 1086 c
651.33 1086 754.67 1035.33 836 934 c
836 1062 836 934 836 1062 c
1002 1062 836 1062 1002 1062 c
1002 144 1002 1062 1002 144 c
1002 -21.33 985.17 -138.5 951.5 -207.5 c
917.83 -276.5 864.5 -331 791.5 -371 c
718.5 -411 628.67 -431 522 -431 c
395.33 -431 293 -402.5 215 -345.5 c
137 -288.5 99.33 -202.67 102 -88 c
closepath 251 550 m
251 410.67 278.67 309 334 245 c
389.33 181 458.67 149 542 149 c
624.67 149 694 180.83 750 244.5 c
806 308.17 834 408 834 544 c
834 674 805.17 772 747.5 838 c
689.83 904 620.33 937 539 937 c
459 937 391 904.5 335 839.5 c
279 774.5 251 678 251 550 c
closepath } bind def
/s105 {
136 1259 m
136 1466 136 1259 136 1466 c
316 1466 136 1466 316 1466 c
316 1259 316 1466 316 1259 c
136 1259 316 1259 136 1259 c
closepath 136 0 m
136 1062 136 0 136 1062 c
316 1062 136 1062 316 1062 c
316 0 316 1062 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s107 {
136 0 m
136 1466 136 0 136 1466 c
316 1466 136 1466 316 1466 c
316 630 316 1466 316 630 c
742 1062 316 630 742 1062 c
975 1062 742 1062 975 1062 c
569 668 975 1062 569 668 c
1016 0 569 668 1016 0 c
794 0 1016 0 794 0 c
443 543 794 0 443 543 c
316 421 443 543 316 421 c
316 0 316 421 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s108 {
131 0 m
131 1466 131 0 131 1466 c
311 1466 131 1466 311 1466 c
311 0 311 1466 311 0 c
131 0 311 0 131 0 c
closepath } bind def
/s110 {
135 0 m
135 1062 135 0 135 1062 c
297 1062 135 1062 297 1062 c
297 911 297 1062 297 911 c
375 1027.67 487.67 1086 635 1086 c
699 1086 757.83 1074.5 811.5 1051.5 c
865.17 1028.5 905.33 998.33 932 961 c
958.67 923.67 977.33 879.33 988 828 c
994.67 794.67 998 736.33 998 653 c
998 0 998 653 998 0 c
818 0 998 0 818 0 c
818 646 818 0 818 646 c
818 719.33 811 774.17 797 810.5 c
783 846.83 758.17 875.83 722.5 897.5 c
686.83 919.17 645 930 597 930 c
520.33 930 454.17 905.67 398.5 857 c
342.83 808.33 315 716 315 580 c
315 0 315 580 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s114 {
133 0 m
133 1062 133 0 133 1062 c
295 1062 133 1062 295 1062 c
295 901 295 1062 295 901 c
336.33 976.33 374.5 1026 409.5 1050 c
444.5 1074 483 1086 525 1086 c
585.67 1086 647.33 1066.67 710 1028 c
648 861 710 1028 648 861 c
604 887 560 900 516 900 c
476.67 900 441.33 888.17 410 864.5 c
378.67 840.83 356.33 808 343 766 c
323 702 313 632 313 556 c
313 0 313 556 313 0 c
133 0 313 0 133 0 c
closepath } bind def
/s116 {
528 161 m
554 2 528 161 554 2 c
503.33 -8.67 458 -14 418 -14 c
352.67 -14 302 -3.67 266 17 c
230 37.67 204.67 64.83 190 98.5 c
175.33 132.17 168 203 168 311 c
168 922 168 311 168 922 c
36 922 168 922 36 922 c
36 1062 36 922 36 1062 c
168 1062 36 1062 168 1062 c
168 1325 168 1062 168 1325 c
347 1433 168 1325 347 1433 c
347 1062 347 1433 347 1062 c
528 1062 347 1062 528 1062 c
528 922 528 1062 528 922 c
347 922 528 922 347 922 c
347 301 347 922 347 301 c
347 249.67 350.17 216.67 356.5 202 c
362.83 187.33 373.17 175.67 387.5 167 c
401.83 158.33 422.33 154 449 154 c
469 154 495.33 156.33 528 161 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2129] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 75/s75 put
Encoding 78/s78 put
Encoding 91/s91 put
Encoding 93/s93 put
Encoding 97/s97 put
Encoding 102/s102 put
Encoding 114/s114 put
Encoding 116/s116 put
/BoundingBoxes 10 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s75 [0 -434 1366 1854] def
/s78 [0 -434 1479 1854] def
/s91 [0 -434 569 1854] def
/s93 [0 -434 569 1854] def
/s97 [0 -434 1139 1854] def
/s102 [0 -434 569 1854] def
/s114 [0 -434 682 1854] def
/s116 [0 -434 569 1854] def
end
/Metrics 10 dict def
 Metrics begin
/s32 569 def
/s75 1366 def
/s78 1479 def
/s91 569 def
/s93 569 def
/s97 1139 def
/s102 569 def
/s114 682 def
/s116 569 def
end
/CharProcs 10 dict def
CharProcs begin
/.notdef {} def
/s75 {
150 0 m
150 1466 150 0 150 1466 c
344 1466 150 1466 344 1466 c
344 739 344 1466 344 739 c
1072 1466 344 739 1072 1466 c
1335 1466 1072 1466 1335 1466 c
720 872 1335 1466 720 872 c
1362 0 720 872 1362 0 c
1106 0 1362 0 1106 0 c
584 742 1106 0 584 742 c
344 508 584 742 344 508 c
344 0 344 508 344 0 c
150 0 344 0 150 0 c
closepath } bind def
/s78 {
156 0 m
156 1466 156 0 156 1466 c
355 1466 156 1466 355 1466 c
1125 315 355 1466 1125 315 c
1125 1466 1125 315 1125 1466 c
1311 1466 1125 1466 1311 1466 c
1311 0 1311 1466 1311 0 c
1112 0 1311 0 1112 0 c
342 1152 1112 0 342 1152 c
342 0 342 1152 342 0 c
156 0 342 0 156 0 c
closepath } bind def
/s91 {
139 -407 m
139 1466 139 -407 139 1466 c
536 1466 139 1466 536 1466 c
536 1317 536 1466 536 1317 c
319 1317 536 1317 319 1317 c
319 -258 319 1317 319 -258 c
536 -258 319 -258 536 -258 c
536 -407 536 -258 536 -407 c
139 -407 536 -407 139 -407 c
closepath } bind def
/s93 {
436 -407 m
39 -407 436 -407 39 -407 c
39 -258 39 -407 39 -258 c
256 -258 39 -258 256 -258 c
256 1317 256 -258 256 1317 c
39 1317 256 1317 39 1317 c
39 1466 39 1317 39 1466 c
436 1466 39 1466 436 1466 c
436 -407 436 1466 436 -407 c
closepath } bind def
/s97 {
828 131 m
761.33 74.33 697.17 34.33 635.5 11 c
573.83 -12.33 507.67 -24 437 -24 c
320.33 -24 230.67 4.5 168 61.5 c
105.33 118.5 74 191.33 74 280 c
74 332 85.83 379.5 109.5 422.5 c
133.17 465.5 164.17 500 202.5 526 c
240.83 552 284 571.67 332 585 c
367.33 594.33 420.67 603.33 492 612 c
637.33 629.33 744.33 650 813 674 c
813.67 698.67 814 714.33 814 721 c
814 794.33 797 846 763 876 c
717 916.67 648.67 937 558 937 c
473.33 937 410.83 922.17 370.5 892.5 c
330.17 862.83 300.33 810.33 281 735 c
105 759 281 735 105 759 c
121 834.33 147.33 895.17 184 941.5 c
220.67 987.83 273.67 1023.5 343 1048.5 c
412.33 1073.5 492.67 1086 584 1086 c
674.67 1086 748.33 1075.33 805 1054 c
861.67 1032.67 903.33 1005.83 930 973.5 c
956.67 941.17 975.33 900.33 986 851 c
992 820.33 995 765 995 685 c
995 445 995 685 995 445 c
995 277.67 998.83 171.83 1006.5 127.5 c
1014.17 83.17 1029.33 40.67 1052 0 c
864 0 1052 0 864 0 c
845.33 37.33 833.33 81 828 131 c
closepath 813 533 m
747.67 506.33 649.67 483.67 519 465 c
445 454.33 392.67 442.33 362 429 c
331.33 415.67 307.67 396.17 291 370.5 c
274.33 344.83 266 316.33 266 285 c
266 237 284.17 197 320.5 165 c
356.83 133 410 117 480 117 c
549.33 117 611 132.17 665 162.5 c
719 192.83 758.67 234.33 784 287 c
803.33 327.67 813 387.67 813 467 c
813 533 813 467 813 533 c
closepath } bind def
/s102 {
178 0 m
178 922 178 0 178 922 c
19 922 178 922 19 922 c
19 1062 19 922 19 1062 c
178 1062 19 1062 178 1062 c
178 1175 178 1062 178 1175 c
178 1246.33 184.33 1299.33 197 1334 c
214.33 1380.67 244.83 1418.5 288.5 1447.5 c
332.17 1476.5 393.33 1491 472 1491 c
522.67 1491 578.67 1485 640 1473 c
613 1316 640 1473 613 1316 c
575.67 1322.67 540.33 1326 507 1326 c
452.33 1326 413.67 1314.33 391 1291 c
368.33 1267.67 357 1224 357 1160 c
357 1062 357 1160 357 1062 c
564 1062 357 1062 564 1062 c
564 922 564 1062 564 922 c
357 922 564 922 357 922 c
357 0 357 922 357 0 c
178 0 357 0 178 0 c
closepath } bind def
/s114 {
133 0 m
133 1062 133 0 133 1062 c
295 1062 133 1062 295 1062 c
295 901 295 1062 295 901 c
336.33 976.33 374.5 1026 409.5 1050 c
444.5 1074 483 1086 525 1086 c
585.67 1086 647.33 1066.67 710 1028 c
648 861 710 1028 648 861 c
604 887 560 900 516 900 c
476.67 900 441.33 888.17 410 864.5 c
378.67 840.83 356.33 808 343 766 c
323 702 313 632 313 556 c
313 0 313 556 313 0 c
133 0 313 0 133 0 c
closepath } bind def
/s116 {
528 161 m
554 2 528 161 554 2 c
503.33 -8.67 458 -14 418 -14 c
352.67 -14 302 -3.67 266 17 c
230 37.67 204.67 64.83 190 98.5 c
175.33 132.17 168 203 168 311 c
168 922 168 311 168 922 c
36 922 168 922 36 922 c
36 1062 36 922 36 1062 c
168 1062 36 1062 168 1062 c
168 1325 168 1062 168 1325 c
347 1433 168 1325 347 1433 c
347 1062 347 1433 347 1062 c
528 1062 347 1062 528 1062 c
528 922 528 1062 528 922 c
347 922 528 922 347 922 c
347 301 347 922 347 301 c
347 249.67 350.17 216.67 356.5 202 c
362.83 187.33 373.17 175.67 387.5 167 c
401.83 158.33 422.33 154 449 154 c
469 154 495.33 156.33 528 161 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Arial exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 771.85 590.88 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.890972 0.892681 sc

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [0.269374 -0 0 -0.268856 0 661.918] concat
gs
575 2052 m
2770 2052 l
7 sw
1 sj
2 scap
st
575 2052 m
575 2069 l
0 scap
st
819 2052 m
819 2069 l
st
1063 2052 m
1063 2069 l
st
1307 2052 m
1307 2069 l
st
1551 2052 m
1551 2069 l
st
1794 2052 m
1794 2069 l
st
2038 2052 m
2038 2069 l
st
2282 2052 m
2282 2069 l
st
2526 2052 m
2526 2069 l
st
2770 2052 m
2770 2069 l
st
697 2052 m
697 2086 l
st
941 2052 m
941 2086 l
st
1185 2052 m
1185 2086 l
st
1429 2052 m
1429 2086 l
st
1673 2052 m
1673 2086 l
st
1916 2052 m
1916 2086 l
st
2160 2052 m
2160 2086 l
st
2404 2052 m
2404 2086 l
st
2648 2052 m
2648 2086 l
st
575 2052 m
575 285 l
2 scap
st
575 2052 m
558 2052 l
0 scap
st
575 1699 m
558 1699 l
st
575 1345 m
558 1345 l
st
575 992 m
558 992 l
st
575 638 m
558 638 l
st
575 285 m
558 285 l
st
575 1875 m
541 1875 l
st
575 1522 m
541 1522 l
st
575 1169 m
541 1169 l
st
575 815 m
541 815 l
st
575 462 m
541 462 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 622 -2169 m
(-200)[25 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 866 -2169 m
(-150)[25 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1110 -2169 m
(-100)[25 42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1375 -2169 m
(-50)[25 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1652 -2169 m
(0)[42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 1874 -2169 m
(50)[42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2097 -2169 m
(100)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2341 -2169 m
(150)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 2585 -2169 m
(200)[42 42 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 387 -1898 m
(-0.4)[25 42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 387 -1545 m
(-0.2)[25 42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 412 -1192 m
(0.0)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 412 -838 m
(0.2)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 75 self 412 -485 m
(0.4)[42 21 42 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 575 285 2196 1768 np rectpath
/eocl cland
np exec
np
794 1875 21 0 360  a
cp
gs
0 0 1 rgb
eofi
gr
3 sw
0 0 1 rgb
1 scap
st
np
1014 1699 21 0 360  a
cp
gs
eofi
gr
st
np
1234 1522 21 0 360  a
cp
gs
eofi
gr
st
np
1453 1328 21 0 360  a
cp
gs
eofi
gr
st
np
1673 1169 21 0 360  a
cp
gs
eofi
gr
st
np
1892 992 21 0 360  a
cp
gs
eofi
gr
st
np
2112 815 21 0 360  a
cp
gs
eofi
gr
st
np
2331 638 21 0 360  a
cp
gs
eofi
gr
st
np
2551 462 21 0 360  a
cp
gs
eofi
gr
st
gr
gs
pathproc 575 285 2196 1768 np rectpath
/eocl cland
np exec
794 1872 m
796 1871 l
798 1869 l
800 1868 l
802 1867 l
803 1865 l
805 1864 l
807 1862 l
809 1861 l
810 1859 l
812 1858 l
814 1857 l
816 1855 l
817 1854 l
819 1852 l
821 1851 l
823 1850 l
824 1848 l
826 1847 l
828 1845 l
830 1844 l
831 1842 l
833 1841 l
835 1840 l
837 1838 l
838 1837 l
840 1835 l
842 1834 l
844 1833 l
845 1831 l
847 1830 l
849 1828 l
851 1827 l
853 1826 l
854 1824 l
856 1823 l
858 1821 l
860 1820 l
861 1818 l
863 1817 l
865 1816 l
867 1814 l
868 1813 l
870 1811 l
872 1810 l
874 1809 l
875 1807 l
877 1806 l
879 1804 l
881 1803 l
882 1802 l
884 1800 l
886 1799 l
888 1797 l
889 1796 l
891 1794 l
893 1793 l
895 1792 l
896 1790 l
898 1789 l
900 1787 l
902 1786 l
903 1785 l
905 1783 l
907 1782 l
909 1780 l
911 1779 l
912 1778 l
914 1776 l
916 1775 l
918 1773 l
919 1772 l
921 1770 l
923 1769 l
925 1768 l
926 1766 l
928 1765 l
930 1763 l
932 1762 l
933 1761 l
935 1759 l
937 1758 l
939 1756 l
940 1755 l
942 1753 l
944 1752 l
946 1751 l
947 1749 l
949 1748 l
951 1746 l
953 1745 l
954 1744 l
956 1742 l
958 1741 l
960 1739 l
961 1738 l
963 1737 l
965 1735 l
967 1734 l
969 1732 l
970 1731 l
972 1729 l
974 1728 l
976 1727 l
977 1725 l
979 1724 l
981 1722 l
983 1721 l
984 1720 l
986 1718 l
988 1717 l
990 1715 l
991 1714 l
993 1713 l
995 1711 l
997 1710 l
998 1708 l
1000 1707 l
1002 1705 l
1004 1704 l
1005 1703 l
1007 1701 l
1009 1700 l
1011 1698 l
1012 1697 l
1014 1696 l
1016 1694 l
1018 1693 l
1019 1691 l
1021 1690 l
1023 1689 l
1025 1687 l
1027 1686 l
1028 1684 l
1030 1683 l
1032 1681 l
1034 1680 l
1035 1679 l
1037 1677 l
1039 1676 l
1041 1674 l
1042 1673 l
1044 1672 l
1046 1670 l
1048 1669 l
1049 1667 l
1051 1666 l
1053 1664 l
1055 1663 l
1056 1662 l
1058 1660 l
1060 1659 l
1062 1657 l
1063 1656 l
1065 1655 l
1067 1653 l
1069 1652 l
1070 1650 l
1072 1649 l
1074 1648 l
1076 1646 l
1077 1645 l
1079 1643 l
1081 1642 l
1083 1640 l
1085 1639 l
1086 1638 l
1088 1636 l
1090 1635 l
1092 1633 l
1093 1632 l
1095 1631 l
1097 1629 l
1099 1628 l
1100 1626 l
1102 1625 l
1104 1624 l
1106 1622 l
1107 1621 l
1109 1619 l
1111 1618 l
1113 1616 l
1114 1615 l
1116 1614 l
1118 1612 l
1120 1611 l
1121 1609 l
1123 1608 l
1125 1607 l
1127 1605 l
1128 1604 l
1130 1602 l
1132 1601 l
1134 1600 l
1136 1598 l
1137 1597 l
1139 1595 l
1141 1594 l
1143 1592 l
1144 1591 l
1146 1590 l
1148 1588 l
1150 1587 l
1151 1585 l
1153 1584 l
1155 1583 l
1157 1581 l
1158 1580 l
1160 1578 l
1162 1577 l
1164 1576 l
1165 1574 l
1167 1573 l
1169 1571 l
1171 1570 l
1172 1568 l
1174 1567 l
1176 1566 l
1178 1564 l
1179 1563 l
1181 1561 l
1183 1560 l
1185 1559 l
1186 1557 l
1188 1556 l
1190 1554 l
1192 1553 l
1194 1551 l
1195 1550 l
1197 1549 l
1199 1547 l
1201 1546 l
1202 1544 l
1204 1543 l
1206 1542 l
1208 1540 l
1209 1539 l
1211 1537 l
1213 1536 l
1215 1535 l
1216 1533 l
1218 1532 l
1220 1530 l
1222 1529 l
1223 1527 l
1225 1526 l
1227 1525 l
1229 1523 l
1230 1522 l
1232 1520 l
1234 1519 l
1236 1518 l
1237 1516 l
1239 1515 l
1241 1513 l
1243 1512 l
1244 1511 l
1246 1509 l
1248 1508 l
1250 1506 l
1252 1505 l
1253 1503 l
1255 1502 l
1257 1501 l
1259 1499 l
1260 1498 l
1262 1496 l
1264 1495 l
1266 1494 l
1267 1492 l
1269 1491 l
1271 1489 l
1273 1488 l
1274 1487 l
1276 1485 l
1278 1484 l
1280 1482 l
1281 1481 l
1283 1479 l
1285 1478 l
1287 1477 l
1288 1475 l
1290 1474 l
1292 1472 l
1294 1471 l
1295 1470 l
1297 1468 l
1299 1467 l
1301 1465 l
1302 1464 l
1304 1462 l
1306 1461 l
1308 1460 l
1310 1458 l
1311 1457 l
1313 1455 l
1315 1454 l
1317 1453 l
1318 1451 l
1320 1450 l
1322 1448 l
1324 1447 l
1325 1446 l
1327 1444 l
1329 1443 l
1331 1441 l
1332 1440 l
1334 1438 l
1336 1437 l
1338 1436 l
1339 1434 l
1341 1433 l
1343 1431 l
1345 1430 l
1346 1429 l
1348 1427 l
1350 1426 l
1352 1424 l
1353 1423 l
1355 1422 l
1357 1420 l
1359 1419 l
1360 1417 l
1362 1416 l
1364 1414 l
1366 1413 l
1368 1412 l
1369 1410 l
1371 1409 l
1373 1407 l
1375 1406 l
1376 1405 l
1378 1403 l
1380 1402 l
1382 1400 l
1383 1399 l
1385 1398 l
1387 1396 l
1389 1395 l
1390 1393 l
1392 1392 l
1394 1390 l
1396 1389 l
1397 1388 l
1399 1386 l
1401 1385 l
1403 1383 l
1404 1382 l
1406 1381 l
1408 1379 l
1410 1378 l
1411 1376 l
1413 1375 l
1415 1373 l
1417 1372 l
1419 1371 l
1420 1369 l
1422 1368 l
1424 1366 l
1426 1365 l
1427 1364 l
1429 1362 l
1431 1361 l
1433 1359 l
1434 1358 l
1436 1357 l
1438 1355 l
1440 1354 l
1441 1352 l
1443 1351 l
1445 1349 l
1447 1348 l
1448 1347 l
1450 1345 l
1452 1344 l
1454 1342 l
1455 1341 l
1457 1340 l
1459 1338 l
1461 1337 l
1462 1335 l
1464 1334 l
1466 1333 l
1468 1331 l
1469 1330 l
1471 1328 l
1473 1327 l
1475 1325 l
1477 1324 l
1478 1323 l
1480 1321 l
1482 1320 l
1484 1318 l
1485 1317 l
1487 1316 l
1489 1314 l
1491 1313 l
1492 1311 l
1494 1310 l
1496 1309 l
1498 1307 l
1499 1306 l
1501 1304 l
1503 1303 l
1505 1301 l
1506 1300 l
1508 1299 l
1510 1297 l
1512 1296 l
1513 1294 l
1515 1293 l
1517 1292 l
1519 1290 l
1520 1289 l
1522 1287 l
1524 1286 l
1526 1284 l
1527 1283 l
1529 1282 l
1531 1280 l
1533 1279 l
1535 1277 l
1536 1276 l
1538 1275 l
1540 1273 l
1542 1272 l
1543 1270 l
1545 1269 l
1547 1268 l
1549 1266 l
1550 1265 l
1552 1263 l
1554 1262 l
1556 1260 l
1557 1259 l
1559 1258 l
1561 1256 l
1563 1255 l
1564 1253 l
1566 1252 l
1568 1251 l
1570 1249 l
1571 1248 l
1573 1246 l
1575 1245 l
1577 1244 l
1578 1242 l
1580 1241 l
1582 1239 l
1584 1238 l
1585 1236 l
1587 1235 l
1589 1234 l
1591 1232 l
1593 1231 l
1594 1229 l
1596 1228 l
1598 1227 l
1600 1225 l
1601 1224 l
1603 1222 l
1605 1221 l
1607 1220 l
1608 1218 l
1610 1217 l
1612 1215 l
1614 1214 l
1615 1212 l
1617 1211 l
1619 1210 l
1621 1208 l
1622 1207 l
1624 1205 l
1626 1204 l
1628 1203 l
1629 1201 l
1631 1200 l
1633 1198 l
1635 1197 l
1636 1195 l
1638 1194 l
1640 1193 l
1642 1191 l
1643 1190 l
1645 1188 l
1647 1187 l
1649 1186 l
1651 1184 l
1652 1183 l
1654 1181 l
1656 1180 l
1658 1179 l
1659 1177 l
1661 1176 l
1663 1174 l
1665 1173 l
1666 1171 l
1668 1170 l
1670 1169 l
1672 1167 l
1673 1166 l
1675 1164 l
1677 1163 l
1679 1162 l
1680 1160 l
1682 1159 l
1684 1157 l
1686 1156 l
1687 1155 l
1689 1153 l
1691 1152 l
1693 1150 l
1694 1149 l
1696 1147 l
1698 1146 l
1700 1145 l
1702 1143 l
1703 1142 l
1705 1140 l
1707 1139 l
1709 1138 l
1710 1136 l
1712 1135 l
1714 1133 l
1716 1132 l
1717 1131 l
1719 1129 l
1721 1128 l
1723 1126 l
1724 1125 l
1726 1123 l
1728 1122 l
1730 1121 l
1731 1119 l
1733 1118 l
1735 1116 l
1737 1115 l
1738 1114 l
1740 1112 l
1742 1111 l
1744 1109 l
1745 1108 l
1747 1106 l
1749 1105 l
1751 1104 l
1752 1102 l
1754 1101 l
1756 1099 l
1758 1098 l
1760 1097 l
1761 1095 l
1763 1094 l
1765 1092 l
1767 1091 l
1768 1090 l
1770 1088 l
1772 1087 l
1774 1085 l
1775 1084 l
1777 1082 l
1779 1081 l
1781 1080 l
1782 1078 l
1784 1077 l
1786 1075 l
1788 1074 l
1789 1073 l
1791 1071 l
1793 1070 l
1795 1068 l
1796 1067 l
1798 1066 l
1800 1064 l
1802 1063 l
1803 1061 l
1805 1060 l
1807 1058 l
1809 1057 l
1810 1056 l
1812 1054 l
1814 1053 l
1816 1051 l
1818 1050 l
1819 1049 l
1821 1047 l
1823 1046 l
1825 1044 l
1826 1043 l
1828 1042 l
1830 1040 l
1832 1039 l
1833 1037 l
1835 1036 l
1837 1034 l
1839 1033 l
1840 1032 l
1842 1030 l
1844 1029 l
1846 1027 l
1847 1026 l
1849 1025 l
1851 1023 l
1853 1022 l
1854 1020 l
1856 1019 l
1858 1018 l
1860 1016 l
1861 1015 l
1863 1013 l
1865 1012 l
1867 1010 l
1868 1009 l
1870 1008 l
1872 1006 l
1874 1005 l
1876 1003 l
1877 1002 l
1879 1001 l
1881 999 l
1883 998 l
1884 996 l
1886 995 l
1888 993 l
1890 992 l
1891 991 l
1893 989 l
1895 988 l
1897 986 l
1898 985 l
1900 984 l
1902 982 l
1904 981 l
1905 979 l
1907 978 l
1909 977 l
1911 975 l
1912 974 l
1914 972 l
1916 971 l
1918 969 l
1919 968 l
1921 967 l
1923 965 l
1925 964 l
1926 962 l
1928 961 l
1930 960 l
1932 958 l
1934 957 l
1935 955 l
1937 954 l
1939 953 l
1941 951 l
1942 950 l
1944 948 l
1946 947 l
1948 945 l
1949 944 l
1951 943 l
1953 941 l
1955 940 l
1956 938 l
1958 937 l
1960 936 l
1962 934 l
1963 933 l
1965 931 l
1967 930 l
1969 929 l
1970 927 l
1972 926 l
1974 924 l
1976 923 l
1977 921 l
1979 920 l
1981 919 l
1983 917 l
1985 916 l
1986 914 l
1988 913 l
1990 912 l
1992 910 l
1993 909 l
1995 907 l
1997 906 l
1999 904 l
2000 903 l
2002 902 l
2004 900 l
2006 899 l
2007 897 l
2009 896 l
2011 895 l
2013 893 l
2014 892 l
2016 890 l
2018 889 l
2020 888 l
2021 886 l
2023 885 l
1 0 0 rgb
1 scap
st
2023 885 m
2025 883 l
2027 882 l
2028 880 l
2030 879 l
2032 878 l
2034 876 l
2035 875 l
2037 873 l
2039 872 l
2041 871 l
2043 869 l
2044 868 l
2046 866 l
2048 865 l
2050 864 l
2051 862 l
2053 861 l
2055 859 l
2057 858 l
2058 856 l
2060 855 l
2062 854 l
2064 852 l
2065 851 l
2067 849 l
2069 848 l
2071 847 l
2072 845 l
2074 844 l
2076 842 l
2078 841 l
2079 840 l
2081 838 l
2083 837 l
2085 835 l
2086 834 l
2088 832 l
2090 831 l
2092 830 l
2093 828 l
2095 827 l
2097 825 l
2099 824 l
2101 823 l
2102 821 l
2104 820 l
2106 818 l
2108 817 l
2109 815 l
2111 814 l
2113 813 l
2115 811 l
2116 810 l
2118 808 l
2120 807 l
2122 806 l
2123 804 l
2125 803 l
2127 801 l
2129 800 l
2130 799 l
2132 797 l
2134 796 l
2136 794 l
2137 793 l
2139 791 l
2141 790 l
2143 789 l
2144 787 l
2146 786 l
2148 784 l
2150 783 l
2151 782 l
2153 780 l
2155 779 l
2157 777 l
2159 776 l
2160 775 l
2162 773 l
2164 772 l
2166 770 l
2167 769 l
2169 767 l
2171 766 l
2173 765 l
2174 763 l
2176 762 l
2178 760 l
2180 759 l
2181 758 l
2183 756 l
2185 755 l
2187 753 l
2188 752 l
2190 751 l
2192 749 l
2194 748 l
2195 746 l
2197 745 l
2199 743 l
2201 742 l
2202 741 l
2204 739 l
2206 738 l
2208 736 l
2209 735 l
2211 734 l
2213 732 l
2215 731 l
2217 729 l
2218 728 l
2220 726 l
2222 725 l
2224 724 l
2225 722 l
2227 721 l
2229 719 l
2231 718 l
2232 717 l
2234 715 l
2236 714 l
2238 712 l
2239 711 l
2241 710 l
2243 708 l
2245 707 l
2246 705 l
2248 704 l
2250 702 l
2252 701 l
2253 700 l
2255 698 l
2257 697 l
2259 695 l
2260 694 l
2262 693 l
2264 691 l
2266 690 l
2268 688 l
2269 687 l
2271 686 l
2273 684 l
2275 683 l
2276 681 l
2278 680 l
2280 678 l
2282 677 l
2283 676 l
2285 674 l
2287 673 l
2289 671 l
2290 670 l
2292 669 l
2294 667 l
2296 666 l
2297 664 l
2299 663 l
2301 662 l
2303 660 l
2304 659 l
2306 657 l
2308 656 l
2310 654 l
2311 653 l
2313 652 l
2315 650 l
2317 649 l
2318 647 l
2320 646 l
2322 645 l
2324 643 l
2326 642 l
2327 640 l
2329 639 l
2331 637 l
2333 636 l
2334 635 l
2336 633 l
2338 632 l
2340 630 l
2341 629 l
2343 628 l
2345 626 l
2347 625 l
2348 623 l
2350 622 l
2352 621 l
2354 619 l
2355 618 l
2357 616 l
2359 615 l
2361 613 l
2362 612 l
2364 611 l
2366 609 l
2368 608 l
2369 606 l
2371 605 l
2373 604 l
2375 602 l
2376 601 l
2378 599 l
2380 598 l
2382 597 l
2384 595 l
2385 594 l
2387 592 l
2389 591 l
2391 589 l
2392 588 l
2394 587 l
2396 585 l
2398 584 l
2399 582 l
2401 581 l
2403 580 l
2405 578 l
2406 577 l
2408 575 l
2410 574 l
2412 573 l
2413 571 l
2415 570 l
2417 568 l
2419 567 l
2420 565 l
2422 564 l
2424 563 l
2426 561 l
2427 560 l
2429 558 l
2431 557 l
2433 556 l
2434 554 l
2436 553 l
2438 551 l
2440 550 l
2442 548 l
2443 547 l
2445 546 l
2447 544 l
2449 543 l
2450 541 l
2452 540 l
2454 539 l
2456 537 l
2457 536 l
2459 534 l
2461 533 l
2463 532 l
2464 530 l
2466 529 l
2468 527 l
2470 526 l
2471 524 l
2473 523 l
2475 522 l
2477 520 l
2478 519 l
2480 517 l
2482 516 l
2484 515 l
2485 513 l
2487 512 l
2489 510 l
2491 509 l
2492 508 l
2494 506 l
2496 505 l
2498 503 l
2500 502 l
2501 500 l
2503 499 l
2505 498 l
2507 496 l
2508 495 l
2510 493 l
2512 492 l
2514 491 l
2515 489 l
2517 488 l
2519 486 l
2521 485 l
2522 484 l
2524 482 l
2526 481 l
2528 479 l
2529 478 l
2531 476 l
2533 475 l
2535 474 l
2536 472 l
2538 471 l
2540 469 l
2542 468 l
2543 467 l
2545 465 l
2547 464 l
2549 462 l
2551 461 l
st
gr
2360 92 m
3020 92 l
3020 310 l
2360 310 l
cp
gs
1 1 1 rgb
eofi
gr
3 sw
0 sj
2 scap
st
gs
gs
gr
gs
np
2466 150 20 0 360  a
cp
gs
0 0 1 rgb
eofi
gr
0 0 1 rgb
1 sj
1 scap
st
gr
1 -1 sc
/MC1_Arial 84 self 2560 -178 m
( )[23 ] xs
1 -1 sc
1 -1 sc
2583 -178 m
(Kraft)[56 28 47 24 23 ] xs
1 -1 sc
gs
gr
gs
gs
2372 253 m
2560 253 l
7 sw
1 0 0 rgb
1 sj
1 scap
st
gr
gr
1 -1 sc
2560 -281 m
( Linearer Fit)[23 47 19 47 47 47 28 47 28 23 51 19 23 ] xs
1 -1 sc
gr
gs
gs
1 -1 sc
350 -1334 tr
90 ro
/MC2_Arial 91 self 0 0 m
(Kraft [N])[61 30 51 25 25 25 25 66 25 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC1_Arial 91 self 1419 -2307 m
(Winkel [deg])[91 20 51 46 51 20 25 25 51 51 51 25 ] xs
1 -1 sc
gr
gr
gs
gr
Save0 restore end
showpage
%%EOF
